@import '../grid/grid-mixins';

@mixin va-title() {
  font-size: 0.625rem;
  letter-spacing: 0.6px;
  line-height: 1.2;
  font-weight: $font-weight-bold;
  text-transform: uppercase;
}

@mixin flex-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin va-header-margin($element) {
  margin-top: map_get($display-margins, $element);
  margin-bottom: map_get($display-margins, $element) / 2;

  [class*='medium-editor'] &:first-child {
    margin-top: map_get($display-margins, $element) / 2;
  }
}

@mixin va-display($element) {
  color: #1b1a1f;
  font-size: map-get($display-font-sizes, $element);
  font-weight: 700;
  line-height: 1;
}

@mixin va-disabled() {
  cursor: default;
  opacity: 0.4;
  pointer-events: none;
}

@mixin theme-button-variant($color, $background, $border, $shadow) {
  $hover-bg: lighten($background, 10%);
  $disabled-bg: darken($background, 15%);
  $active-bg: darken($background, 15%);
  $disabled-color: darken($background, 30%);

  background-color: $background;
  color: $color;
  box-shadow: $shadow;
  border: $border;

  &:hover {
    color: $color;
    background-color: $hover-bg;
  }

  &.active,
  &:active,
  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active {
    background-color: $active-bg;
    box-shadow: $shadow;
    color: $color;

    &:focus {
      box-shadow: $shadow;
    }
  }

  &[disabled],
  &[disabled]:hover {
    background-color: $disabled-bg;
    color: $disabled-color;
    opacity: 0.5;
  }
}

@mixin normalize-button {
  font-size: 100%;
  overflow: visible;
  text-transform: none;
  padding: 0;
  background-color: transparent;
  border-style: none;
}

@mixin va-button($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@mixin va-code-snippet {
  font-size: 14px;
  color: $white;
  padding: 1rem;
  font-family: 'Source Code Pro';
  background-color: $vue-darkest-blue;
}

@mixin va-table {
  th,
  td {
    text-align: left;
    padding: 0.625rem;
  }

  th {
    @include va-title();

    color: $vue-darkest-blue;
    border-bottom: 2px solid $vue-darkest-blue;
  }

  td {
    vertical-align: top;
  }

  &--striped {
    tr {
      &:nth-child(even) {
        td {
          background-color: $light-gray3;
        }
      }
    }
  }

  &--hoverable {
    tr {
      &:hover {
        td {
          background-color: $light-gray2;
        }
      }
    }
  }

  &--clickable {
    td {
      cursor: pointer;
    }
  }
}

@mixin va-modal-transition($is-overlay: false) {
  $modal-transition: $modal-opacity-transition, $modal-transform-transition;

  @if ($is-overlay) {
    $modal-transition: $modal-overlay-opacity-transition;
  }

  &-enter,
  &-leave-to {
    opacity: 0;

    @if ($is-overlay != true) {
      transform: translateY(-30%);
    }
  }

  &-enter-active {
    transition: $modal-transition;
  }

  &-leave-active {
    transition: $modal-transition;
  }
}
